[{"E:\\react-learn\\anista--------\\my-test\\calculator\\src\\index.js":"1","E:\\react-learn\\anista--------\\my-test\\calculator\\src\\App.js":"2","E:\\react-learn\\anista--------\\my-test\\calculator\\src\\components\\Button.js":"3","E:\\react-learn\\anista--------\\my-test\\calculator\\src\\components\\Input.js":"4","E:\\react-learn\\anista--------\\my-test\\calculator\\src\\components\\ClearBtn.js":"5"},{"size":198,"mtime":1612274861016,"results":"6","hashOfConfig":"7"},{"size":3950,"mtime":1612710114628,"results":"8","hashOfConfig":"7"},{"size":617,"mtime":1612619334937,"results":"9","hashOfConfig":"7"},{"size":299,"mtime":1612278069869,"results":"10","hashOfConfig":"7"},{"size":378,"mtime":1612279884184,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"kkm0i",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"14"},"E:\\react-learn\\anista--------\\my-test\\calculator\\src\\index.js",[],["27","28"],"E:\\react-learn\\anista--------\\my-test\\calculator\\src\\App.js",["29"],"import './style.css';\nimport React from \"react\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport * as math from 'mathjs'\nimport {ClearBtn} from \"./components/ClearBtn\";\n\nclass App extends React.Component {\n    constructor(propse) {\n        super(propse);\n        this.state = {\n            input:\"\",\n            point:false\n        }\n    }\n    checkchar = (val) =>{\n        console.log('checkchar')\n        if (val === \".\"||val===\"/\"||val===\"*\"||val===\"-\"||val===\"+\"||val===\"Enter\"){\n            console.log('if')\n            if (val === \".\"){\n                this.setState((s)=>({point:true}))\n            }else {\n                this.setState((s)=>({point: false}))\n            }\n            console.log(this.state.point)\n            this.addinput(val)\n        }else{\n            console.log('else')\n            this.addinput(val)\n        }\n\n    }\n    addinput = (val) =>{\n        console.log('addinput')\n        if (!(val===\".\"&& this.state.point)){\n            console.log('addinput if')\n            this.setState({input: this.state.input + val})\n        }\n    }\n\n    handleEqual = () => {\n        this.setState({ input: math.evaluate(this.state.input) });\n    };\n\n\n    getKey = (e) => {\n        if (((!isNaN( e.key)) ||  e.key === \".\"||  e.key === \"Enter\" ||  e.key === \"=\"||  e.key === \"+\"||  e.key === \"-\"||  e.key === \"*\"||  e.key === \"/\")){\n            e.key==='Enter' ? this.handleEqual() : this.checkchar(e.key)\n        }\n\n    };\n\n    componentDidMount(){\n        document.addEventListener(\"keydown\", this.getKey);\n    }\n    componentWillUnmount() {\n        document.removeEventListener(\"keydown\", this.getKey);\n    }\n\n    render(){\n        return (\n            <div className=\"app\">\n                <div className=\"calc-wrapper\">\n                    <p id='title'>my calculator</p>\n                    <Input input={this.state.input}/>\n                    <div className='row'>\n                        <Button handleClick={this.checkchar}>AC</Button>\n                        <Button handleClick={this.checkchar}>CE</Button>\n                        <Button handleClick={this.checkchar}>%</Button>\n                        <Button handleClick={this.checkchar}>/</Button>\n                    </div>\n                    <div className='row'>\n                        <Button handleClick={this.checkchar}>7</Button>\n                        <Button handleClick={this.checkchar}>8</Button>\n                        <Button handleClick={this.checkchar}>9</Button>\n                        <Button handleClick={this.checkchar}>*</Button>\n                    </div>\n                    <div className='row'>\n                        <Button handleClick={this.checkchar}>6</Button>\n                        <Button handleClick={this.checkchar}>5</Button>\n                        <Button handleClick={this.checkchar}>4</Button>\n                        <Button handleClick={this.checkchar}>-</Button>\n                    </div>\n                    <div className='row'>\n                        <Button handleClick={this.checkchar}>3</Button>\n                        <Button handleClick={this.checkchar}>2</Button>\n                        <Button handleClick={this.checkchar}>1</Button>\n                        <Button handleClick={this.checkchar}>+</Button>\n                    </div>\n                    <div className='row'>\n                        <Button handleClick={this.checkchar}>.</Button>\n                        <Button handleClick={this.checkchar}>0</Button>\n                        <Button handleClick={() => this.handleEqual()}>=</Button>\n                    </div>\n                    {/*<div className=\"row\">*/}\n                    {/*    <ClearBtn handleClear={() => this.setState({ input: \"\" })}>*/}\n                    {/*        Clear*/}\n                    {/*    </ClearBtn>*/}\n                    {/*</div>*/}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","E:\\react-learn\\anista--------\\my-test\\calculator\\src\\components\\Button.js",["30"],"import React from 'react'\r\n\r\nclass Button extends React.Component{\r\n    constructor(propse) {\r\n        super(propse);\r\n    }\r\n\r\n     isdelet = (v) =>{return ( v === \"AC\" || v === \"CE\");}\r\n     isplus = (v) =>{return ( v === \"+\");}\r\n        render() {\r\n            return (\r\n                <div className={`button-wrapper ${ this.isdelet(this.props.children) ? \"colorbutton\" : \"\"}  ${ this.isplus(this.props.children) ? \"tall\" : \"\"}`} onClick={() => this.props.handleClick(this.props.children)}>\r\n                    {this.props.children}\r\n                </div>\r\n            );\r\n        }\r\n}\r\n\r\nexport default Button","E:\\react-learn\\anista--------\\my-test\\calculator\\src\\components\\Input.js",["31"],"import React from \"react\";\r\n\r\nclass Input extends React.Component{\r\n    constructor(propse) {\r\n        super(propse);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='input'>\r\n                {this.props.input}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input","E:\\react-learn\\anista--------\\my-test\\calculator\\src\\components\\ClearBtn.js",["32","33"],"import React from \"react\";\r\nimport {extend} from \"mathjs/lib/esm/utils/object\";\r\n\r\nexport class ClearBtn extends React.Component {\r\n    constructor(propse) {\r\n        super(propse);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"clear-btn\" onClick={this.props.handleClear}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n};",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":6,"column":9,"nodeType":"40","messageId":"41","endLine":6,"endColumn":17},{"ruleId":"42","severity":1,"message":"43","line":4,"column":5,"nodeType":"44","messageId":"45","endLine":6,"endColumn":6},{"ruleId":"42","severity":1,"message":"43","line":4,"column":5,"nodeType":"44","messageId":"45","endLine":6,"endColumn":6},{"ruleId":"38","severity":1,"message":"46","line":2,"column":9,"nodeType":"40","messageId":"41","endLine":2,"endColumn":15},{"ruleId":"42","severity":1,"message":"43","line":5,"column":5,"nodeType":"44","messageId":"45","endLine":7,"endColumn":6},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'ClearBtn' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'extend' is defined but never used.","no-global-assign","no-unsafe-negation"]